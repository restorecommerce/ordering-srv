{
  "database": {
    "main": {
      "provider": "arango",
      "host": "localhost",
      "port": 8529,
      "database": "ordering-srv",
      "autoCreate": true,
      "retries": 6,
      "delay": 30000,
      "collections": [
        "orders"
      ],
      "entities": [
        "order"
      ]
    }
  },
  "redis": {
    "host": "localhost",
    "port": 6379,
    "offsetStoreInterval": 1000,
    "db-indexes": {
      "db-offsetStore": 0,
      "db-subject": 4,
      "db-orderStore": 9
    }
  },
  "logger": {
    "console": {
      "handleExceptions": false,
      "level": "silly",
      "colorize": true,
      "prettyPrint": true
    }
  },
  "fieldHandlers": {
    "timeStampFields": ["meta.created", "meta.modified"]
  },
  "events": {
    "enableEvents": true,
    "emitters": {
      "FAILED": "orderFailed",
      "INVALID": "orderInvalid",
      "SUBMITTED": "orderSubmitted",
      "IN_PROCESS": "orderInProcess",
      "DONE": "orderDone",
      "WITHDRAWN": "orderWithdrawn",
      "CANCELLED": "orderCancelled",
      "CREATE_FULFILLMENTS": "createFulfillments",
      "CREATE_INVOICES": "createInvoices"
    },
    "kafka": {
      "provider": "kafka",
      "groupId": "restore-ordering-srv",
      "kafka": {
        "clientId": "restore-ordering-srv",
        "brokers": [
          "localhost:29092"
        ]
      },
      "latestOffset": false,
      "orderCreated": {
        "messageObject": "io.restorecommerce.order.Order"
      },
      "orderModified": {
        "messageObject": "io.restorecommerce.order.Order"
      },
      "orderDeleted": {
        "messageObject": "io.restorecommerce.order.Deleted"
      },
      "orderFailed": {
        "messageObject": "io.restorecommerce.order.OrderResponse"
      },
      "orderInvalid": {
        "messageObject": "io.restorecommerce.order.OrderResponse"
      },
      "orderSubmitted": {
        "messageObject": "io.restorecommerce.order.Order"
      },
      "orderInProcess": {
        "messageObject": "io.restorecommerce.order.Order"
      },
      "orderDone": {
        "messageObject": "io.restorecommerce.order.Order"
      },
      "orderWithdrawn": {
        "messageObject": "io.restorecommerce.order.Order"
      },
      "orderCancelled": {
        "messageObject": "io.restorecommerce.order.Order"
      },
      "createFulfillments": {
        "messageObject": "io.restorecommerce.order.FulfillmentRequestList"
      },
      "createInvoices": {
        "messageObject": "io.restorecommerce.order.InvoiceRequestList"
      },
      "restoreCommand": {
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "restoreResponse": {
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "healthCheckCommand": {
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "healthCheckResponse": {
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "versionCommand": {
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "versionResponse": {
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "resetCommand": {
        "messageObject": "io.restorecommerce.commandinterface.CommandRequest"
      },
      "resetResponse": {
        "messageObject": "io.restorecommerce.commandinterface.CommandResponse"
      },
      "renderRequest": {
        "messageObject": "io.restorecommerce.rendering.RenderRequest"
      },
      "topics": {
        "command": {
          "topic": "io.restorecommerce.command",
          "events": {
            "healthCheckCommand": "handleCommand",
            "restoreCommand": "handleCommand",
            "resetCommand": "handleCommand",
            "versionCommand": "handleCommand",
            "configUpdateCommand": "handleCommand",
            "setApiKeyCommand": "handleCommand",
            "flushCacheCommand": "handleCommand"
          }
        },
        "jobs": {
          "topic": "io.restorecommerce.jobs",
          "events": {
            "queuedJob": "handleQueuedJob"
          }
        },
        "ordering.resource": {
          "topic": "io.restorecommerce.ordering.resource",
          "events": {
            "createOrders": "handleCreateOrders",
            "updateOrders": "handleUpdateOrders",
            "upsertOrders": "handleUpsertOrders",
            "submitOrders": "handleSubmitOrders",
            "fulfillOrders": "handleFulfillOrders",
            "withdrawOrders": "handleWithdrawOrders",
            "cancelOrders": "handleCancelOrders"
          }
        },
        "fulfillment.resource": {
          "topic": "io.restorecommerce.fulfillment.resource",
          "events": {
            "fulfillmentSubmitted": "handleFulfillmentSubmitted",
            "fulfillmentInvalid": "handleFulfillmentInvalid",
            "fulfillmentFailed": "handleFulfillmentFailed",
            "fulfillmentFulfilled": "handleFulfillmentFulfilled",
            "fulfillmentWithdrawn": "handleFulfillmentWithdrawn",
            "fulfillmentCancelled": "handleFulfillmentCancelled"
          }
        }
      }
    }
  },
  "client": {
    "order": {
      "address": "localhost:50051"
    },
    "acs-srv": {
      "address": "localhost:50061",
      "mock": {
        "protoPath": "io/restorecommerce/access_control.proto",
        "packageName": "io.restorecommerce.access_control",
        "serviceName": "AccessControlService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    },
    "user": {
      "address": "localhost:50065",
      "mock": {
        "protoPath": "io/restorecommerce/user.proto",
        "packageName": "io.restorecommerce.user",
        "serviceName": "UserService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    },
    "product": {
      "address": "localhost:50066",
      "mock": {
        "protoPath": "io/restorecommerce/product.proto",
        "packageName": "io.restorecommerce.product",
        "serviceName": "ProductService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    },
    "contact_point": {
      "address": "localhost:50067",
      "mock": {
        "protoPath": "io/restorecommerce/contact_point.proto",
        "packageName": "io.restorecommerce.contact_point",
        "serviceName": "ContactPointService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    },
    "address": {
      "address": "localhost:50068",
      "mock": {
        "protoPath": "io/restorecommerce/address.proto",
        "packageName": "io.restorecommerce.address",
        "serviceName": "AddressService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    },
    "country": {
      "address": "localhost:50069",
      "mock": {
        "protoPath": "io/restorecommerce/country.proto",
        "packageName": "io.restorecommerce.country",
        "serviceName": "CountryService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    },
    "tax": {
      "address": "localhost:50070",
      "mock": {
        "protoPath": "io/restorecommerce/tax.proto",
        "packageName": "io.restorecommerce.tax",
        "serviceName": "TaxService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    },
    "tax_type": {
      "address": "localhost:50071",
      "mock": {
        "protoPath": "io/restorecommerce/tax_type.proto",
        "packageName": "io.restorecommerce.tax_type",
        "serviceName": "TaxTypeService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    },
    "customer": {
      "address": "localhost:50072",
      "mock": {
        "protoPath": "io/restorecommerce/customer.proto",
        "packageName": "io.restorecommerce.customer",
        "serviceName": "CustomerService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    },
    "shop": {
      "address": "localhost:50073",
      "mock": {
        "protoPath": "io/restorecommerce/shop.proto",
        "packageName": "io.restorecommerce.shop",
        "serviceName": "ShopService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    },
    "organization": {
      "address": "localhost:50074",
      "mock": {
        "protoPath": "io/restorecommerce/organization.proto",
        "packageName": "io.restorecommerce.organization",
        "serviceName": "OrganizationService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    },
    "fulfillment": {
      "address": "localhost:50075",
      "mock": {
        "protoPath": "io/restorecommerce/fulfillment.proto",
        "packageName": "io.restorecommerce.fulfillment",
        "serviceName": "FulfillmentService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    },
    "fulfillment_product": {
      "address": "localhost:50076",
      "mock": {
        "protoPath": "io/restorecommerce/fulfillment_product.proto",
        "packageName": "io.restorecommerce.fulfillment_product",
        "serviceName": "FulfillmentProductService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    },
    "invoice": {
      "address": "localhost:50077",
      "mock": {
        "protoPath": "io/restorecommerce/invoice.proto",
        "packageName": "io.restorecommerce.invoice",
        "serviceName": "InvoiceService",
        "protoLoadOptions": {
          "includeDirs": [
            "node_modules/@restorecommerce/protos/"
          ]
        }
      }
    }
  },
  "server": {
    "transports": [
      {
        "name": "grpcOrdering",
        "provider": "grpc",
        "addr": "0.0.0.0:50051"
      }
    ]
  },
  "serviceNames": {
    "ordering": "io-restorecommerce-ordering-srv",
    "reflection": "io-restorecommerce-ordering-reflection",
    "cis": "io-restorecommerce-ordering-cis",
    "health":  "grpc-health-v1"
  },
  "urns": {
    "instanceType": "urn:restorecommerce:ordering:Order",
    "roleScopingEntity": "urn:restorecommerce:acs:names:model:entity",
    "roleScopingInstance": "urn:oasis:names:tc:xacml:1.0:resource:resource-id",
    "organization": "urn:restorecommerce:acs:model:organization:Organization",
    "ownerIndicatoryEntity": "urn:restorecommerce:acs:names:ownerIndicatoryEntity",
    "ownerIndicatoryInstance": "urn:restorecommerce:acs:names:ownerInstance"
  },
  "authorization": {
    "service": "acs-srv",
    "enabled": true,
    "enforce": true,
    "urns": {
      "entity": "urn:restorecommerce:acs:names:model:entity",
      "order": "urn:restorecommerce:acs:model:order.Order",
      "model": "urn:restorecommerce:acs:model",
      "role": "urn:restorecommerce:acs:names:role",
      "roleScopingEntity": "urn:restorecommerce:acs:names:roleScopingEntity",
      "roleScopingInstance": "urn:restorecommerce:acs:names:roleScopingInstance",
      "unauthenticated_user": "urn:restorecommerce:acs:names:unauthenticated-user",
      "property": "urn:restorecommerce:acs:names:model:property",
      "ownerIndicatoryEntity": "urn:restorecommerce:acs:names:ownerIndicatoryEntity",
      "ownerInstance": "urn:restorecommerce:acs:names:ownerInstance",
      "orgScope": "urn:restorecommerce:acs:model:organization.Organization",
      "subjectID": "urn:oasis:names:tc:xacml:1.0:subject:subject-id",
      "resourceID": "urn:oasis:names:tc:xacml:1.0:resource:resource-id",
      "actionID": "urn:oasis:names:tc:xacml:1.0:action:action-id",
      "action": "urn:restorecommerce:acs:names:action",
      "operation": "urn:restorecommerce:acs:names:operation",
      "execute": "urn:restorecommerce:acs:names:action:execute",
      "permitOverrides": "urn:oasis:names:tc:xacml:3.0:rule-combining-algorithm:permit-overrides",
      "denyOverrides": "urn:oasis:names:tc:xacml:3.0:rule-combining-algorithm:deny-overrides",
      "create": "urn:restorecommerce:acs:names:action:create",
      "read": "urn:restorecommerce:acs:names:action:read",
      "modify": "urn:restorecommerce:acs:names:action:modify",
      "delete": "urn:restorecommerce:acs:names:action:delete",
      "organization": "urn:restorecommerce:acs:model:organization.Organization",
      "aclIndicatoryEntity": "urn:restorecommerce:acs:names:aclIndicatoryEntity",
      "aclInstance": "urn:restorecommerce:acs:names:aclInstance",
      "skipACL": "urn:restorecommerce:acs:names:skipACL",
      "maskedProperty": "urn:restorecommerce:acs:names:obligation:maskedProperty"
    },
    "cache": {
      "host": "localhost",
      "port": 6379,
      "db-index": 5,
      "ttl": 3600,
      "prefix": "acs:"
    }
  },
  "statusCodes": {
    "OK": {
      "id": "",
      "code": 200,
      "message": "OK"
    },
    "NOT_FOUND": {
      "id": "",
      "code": 404,
      "message": "{entity} {id} not found!"
    },
    "NOT_SUBMITTED": {
      "id": "",
      "code": 400,
      "message": "{entity} {id} expected to be submitted!"
    },
    "NO_PHYSICAL_ITEM": {
      "id": "",
      "code": 208,
      "message": "{entity} {id} includes no physical item!"
    },
    "IN_HOMOGEN_INVOICE": {
      "id": "",
      "code": 400,
      "message": "{entity} {id} must have identical customer_id and shop_id to master {entity}!"
    }
  },
  "operationStatusCodes": {
    "SUCCESS": {
      "code": 200,
      "message": "SUCCESS"
    },
    "PARTIAL": {
      "code": 400,
      "message": "Patrial executed with errors!"
    },
    "LIMIT_EXHAUSTED": {
      "code": 500,
      "message": "Query limit 1000 for {entity} exhausted!"
    }
  },
  "errors": {
    "INVALID_CREDENTIALS": {
      "code": 401,
      "message": "Invalid credentials"
    },
    "USER_NOT_LOGGED_IN": {
      "code": 401,
      "message": "Invalid authentication context, please log in first"
    },
    "ACTION_NOT_ALLOWED": {
      "code": 403,
      "message": "Action not allowed on this resource"
    }
  },
  "preDefinedIds": {
    "legalAddressTypeId": "legal_address"
  }
}
